#!usr/bin/env python
from boto.ec2 import connect_to_region

ec2-conn = connect_to_region("") 
#create security group and allowing to SSH.
#with fire wall i am enabling all the ports except port 22
inst_sg = ec2_conn.create_security_group("inst-sg","inst sec group")
inst_sg.authorize("tcp",22,22,"0.0.0.0/0")


#create and save a public keysfro ssh login.
inst_key = ec2_conn.create_key_pair("inst-key-01")
demo_key.save(".")

#create an insatnce usin AWS linux.
resrv = ec2_conn.run_instance("ami-id",key_name"inst-key-01",
instance_type="t1.micro",security_groups["inst_sg"])

#get the instance ip address

inst = resrv.instance[0]
while inst.update() !='running':
time.sleep(1)
print inst.ip_address
##example-2 i am creating an s3 bucket in us-east"
##making it to open to put the images
#CROS (CROSS-ORGIN RESOURES SHARING)
##example-2 i am creating an s3 bucket in us-east"
##making it to open to put the images
#CROS (CROSS-ORGIN RESOURES SHARING)
import boto
from boto.s3.cors import CORSconfigutaion
s3_conn = boto.connect_s3()

#creating a bucket with uniq name
bucket = s3_conn.create_bucket("uniqe_name", location="   ")

#create CORE configutration
cors = CORSconfigutaion()
cors_conf.add_rule(allowed_method=['GET', ], allowed_origin=['*', ], allowed_header=['Authorization', ],
cors_conf.add_rule(allowed_method=['POST', ], allowed_origin=['*', ], allowed_header=['Authorization', ],
cors_conf.add_rule(allowed_method=['PUT', ], allowed_origin=['*', ], allowed_header=['Authorization', ],

#apply CORS config to our buckets
bucket.set_cors(cors)
